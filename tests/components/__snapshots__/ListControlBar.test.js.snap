// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ListControlBar/> should render ListControlBar as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListControlBar
    handlePauseChange={[MockFunction]}
    handleSearchFilter={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <SegmentedControl
          height={40}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Live",
                "value": "live",
              },
              Object {
                "label": "Pause",
                "value": "pause",
              },
            ]
          }
          value="live"
          width={160}
        />,
        <_class
          height={40}
          marginX="16px"
          name="searchBox"
          onChange={[Function]}
          placeholder="Type to search..."
          width="360px"
        />,
        <_class
          alignItems="center"
          disabled={true}
          display="inline-flex"
          is="button"
          justifyContent="center"
          secondary="true"
        >
          Advanced
        </_class>,
      ],
      "style": Object {
        "WebKitBoxAlign": "center",
        "alignItems": "center",
        "borderBottom": "1px solid #d5dee6",
        "display": "flex",
        "height": "72px",
        "padding": "0 16px",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "height": 40,
          "onChange": [Function],
          "options": Array [
            Object {
              "label": "Live",
              "value": "live",
            },
            Object {
              "label": "Pause",
              "value": "pause",
            },
          ],
          "value": "live",
          "width": 160,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "height": 40,
          "marginX": "16px",
          "name": "searchBox",
          "onChange": [Function],
          "placeholder": "Type to search...",
          "width": "360px",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alignItems": "center",
          "children": "Advanced",
          "disabled": true,
          "display": "inline-flex",
          "is": "button",
          "justifyContent": "center",
          "secondary": "true",
        },
        "ref": null,
        "rendered": "Advanced",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <SegmentedControl
            height={40}
            onChange={[Function]}
            options={
              Array [
                Object {
                  "label": "Live",
                  "value": "live",
                },
                Object {
                  "label": "Pause",
                  "value": "pause",
                },
              ]
            }
            value="live"
            width={160}
          />,
          <_class
            height={40}
            marginX="16px"
            name="searchBox"
            onChange={[Function]}
            placeholder="Type to search..."
            width="360px"
          />,
          <_class
            alignItems="center"
            disabled={true}
            display="inline-flex"
            is="button"
            justifyContent="center"
            secondary="true"
          >
            Advanced
          </_class>,
        ],
        "style": Object {
          "WebKitBoxAlign": "center",
          "alignItems": "center",
          "borderBottom": "1px solid #d5dee6",
          "display": "flex",
          "height": "72px",
          "padding": "0 16px",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "height": 40,
            "onChange": [Function],
            "options": Array [
              Object {
                "label": "Live",
                "value": "live",
              },
              Object {
                "label": "Pause",
                "value": "pause",
              },
            ],
            "value": "live",
            "width": 160,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "height": 40,
            "marginX": "16px",
            "name": "searchBox",
            "onChange": [Function],
            "placeholder": "Type to search...",
            "width": "360px",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "center",
            "children": "Advanced",
            "disabled": true,
            "display": "inline-flex",
            "is": "button",
            "justifyContent": "center",
            "secondary": "true",
          },
          "ref": null,
          "rendered": "Advanced",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
